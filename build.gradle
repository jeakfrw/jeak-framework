import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'maven-publish'
    id 'antlr'
}

group 'de.fearnixx'
version '1.2.1'
def projectVersion = project.version

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

if (project.hasProperty("preRelease")) {
    apply from: './pre-release.gradle'
    def tag = project.ext.getPreReleaseTag()
    def i = tag.substring(tag.lastIndexOf('.') + 1)

    projectVersion += "-rc." + i

} else if (!project.hasProperty('release')) {
    projectVersion += '-SNAPSHOT'
}

println "Using project version: $projectVersion"
version projectVersion

project.ext {
    artifact = 'jeakbot'
}

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    api {
        java {
            srcDir 'src/api/java'
        }
        resources {
            srcDir 'src/api/resources'
        }
    }

    main {
        java {
            srcDirs = ['src/api/java', 'src/main/java', 'build/generated-src/antlr/main']
        }
        resources {
            srcDirs = ['src/api/resources', 'src/main/resources']
        }
    }
    
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

dependencies {
    apiImplementation 'de.mlessmann:confort-api:1.1.3-SNAPSHOT'
    apiImplementation 'org.hibernate:hibernate-core:5.6.3.Final'
    apiImplementation 'org.slf4j:slf4j-api:1.7.32'

    implementation sourceSets.api.output

    implementation 'de.mlessmann:confort:1.1.3-SNAPSHOT'
    implementation 'io.github.classgraph:classgraph:4.8.138'
    implementation 'org.hibernate:hibernate-core:5.6.3.Final'
    implementation 'org.slf4j:slf4j-api:1.7.32'
    implementation 'com.zaxxer:HikariCP:5.0.0'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'
    implementation 'com.sparkjava:spark-core:2.9.3'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.1'
    implementation 'com.jcraft:jsch:0.1.55'
    implementation 'org.antlr:antlr4:4.9.3'
    antlr 'org.antlr:antlr4:4.9.3'

    implementation 'com.github.marianobarrios:tls-channel:0.6.0'

    implementation 'com.github.manevolent:ts3j:1.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'net.tomp2p:opus-wrapper:1.4'
    implementation 'com.sun.jna:jna:3.0.9'
    implementation 'com.github.manevolent:ffmpeg4j:534e72e6e7'

    runtimeOnly 'org.antlr:antlr4-runtime:4.9.3'
    runtimeOnly 'org.apache.logging.log4j:log4j-api:2.17.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-core:2.17.1'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.3'
    runtimeOnly 'com.sun.mail:smtp:2.0.1'
    runtimeOnly 'com.sun.mail:dsn:2.0.1'

    // BEGIN: Rewrite Jetty due to CVE-2021-28165
    implementation('org.eclipse.jetty:jetty-server') {
        version {
            strictly '9.4.41.v20210516'
        }
    }
    implementation('org.eclipse.jetty:jetty-webapp') {
        version {
            strictly '9.4.41.v20210516'
        }
    }
    implementation('org.eclipse.jetty.websocket:websocket-server') {
        version {
            strictly '9.4.41.v20210516'
        }
    }
    implementation('org.eclipse.jetty.websocket:websocket-servlet') {
        version {
            strictly '9.4.41.v20210516'
        }
    }
    // END: Rewrite Jetty

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

apply from: './antlr.gradle'
apply from: './artifacts.gradle'
apply from: './distribution.gradle'
apply from: './publication.gradle'

task processSourceReplacements(type: org.gradle.api.tasks.Sync) {
    from sourceSets.main.java
    inputs.property "version", version
    filter(ReplaceTokens, tokens: [
            VERSION: version
    ])
    into "$buildDir/src"
}

compileJava {
    source = processSourceReplacements.outputs
    options.compilerArgs << "-Xlint:deprecation"
}

build {
    dependsOn publishToMavenLocal
}

wrapper {
    gradleVersion '7.2'
    distributionType = Wrapper.DistributionType.ALL
}
